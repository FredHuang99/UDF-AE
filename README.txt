UDF-AE
A convolutional autoencoder about streamline characterization in unsigned distance field.

Training
The code of the training part runs on jupyter notebook. 
You can reset the parameters and train it yourself and you can also use the trained model-UDF-AE.pkl.
We will show how to load the model in Model_load.ipynb.

Visualize streamlines in voxelization mode
Read Visualize_Voxel.ipynb.

Similar streamline query experiment
Read Query.ipynb firstly and if you want to visualize the answer in '.VTK' format use the intermediate file generated by Query.ipynb. 
Then input the intermediate file and the source flow field file into the visualization project.

Flow field compression experiment
Read Compression.ipynb firstly and if you want to visualize the answer in '.VTK' format use the intermediate file generated by Compression.ipynb.
Then input the intermediate file and the source flow field into the visualization project.

Visualization project
Use filter_streamlines.py and generate_data.py to create a pycharm project. 
Input the serial numbers of streamlines that you want to visualize in '.npy' format and the source flow filed in '.vtk' format. 
After you gain the output flow field in '.vtk' format visualize it by ParaView.
The way to use filter_streamlines is simple, you only need to change 'file_path' and 'r_path' in if __name__ == '__main__': and change 'output_path' in   self.__save_fs(vtk_file_path, 'output_path') according to the comment.

Notes
You can download Experiment_input_and_output.rar(intermediate files of these two experiment and the output) by https://1drv.ms/u/s!AhcOo7TAXvAoinm9vuk1DbfoJi0K?e=aFUaVA.
You can download Source_flow_field.rar(original flow field in '.VTK' format) by https://1drv.ms/u/s!AhcOo7TAXvAoiniuXW3oyKgQw5pd?e=Tn0caw.
You can download Training_data.rar(original flow field in unsigned distance field stored in '.hdf5' format) by https://1drv.ms/u/s!AhcOo7TAXvAoinfSl7MQ4U9U2OOx?e=z9gdy5.
If you can't download these files successfully you can email me at woshihhy@bupt.edu.cn.
